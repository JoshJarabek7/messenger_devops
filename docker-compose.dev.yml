services:

  db:
    image: pgvector/pgvector:pg17
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.DB
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    volumes:
      - ../backend/app:/app/app
      - ../backend/requirements.txt:/app/requirements.txt
    ports:
      - "8000:8000"
    env_file:
      - .env.BACKEND
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy
    init: true
    stop_signal: SIGTERM
    stop_grace_period: 30s
  
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ../frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "5173:5173"
      - "24678:24678"
    env_file:
      - .env.FRONTEND.dev
    depends_on:
      backend:
        condition: service_healthy
  
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - "./nginx.dev.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
  
volumes:
  postgres_data:
  frontend_node_modules: